@using SiteMVC.Models;
@using SiteMVC.Repositories;
@model IEnumerable<HomeWork>
@inject AccountRepository accountRepository
@inject UserRepository userRepository
@inject RolesRepository rolesRepository
@inject HomeWorkRepository homeWorkRepository
@inject SubjectRepository subjectRepository
@{
    string login = User.Identity.Name;
    var account = await accountRepository.GetAccountByLoginAsync(login);
    var user = await userRepository.GetUserByAccountAsync(account);
    var userRole = await rolesRepository.GetUserRoleAsync(user);
    List<HomeWork>? homeWorks = await homeWorkRepository.GetUserHomeWorksAsync(user);
    List<HomeWork>? teacherHomeWorks = await homeWorkRepository.GetTeacherHomeWorksAsync(user);
}

@{
    ViewData["Title"] = "Домашнее Задание";
}

<h1>Домашнее Задание</h1>

@if (userRole.Name == "Учитель" || userRole.Name == "admin")
{
    <p>
        <a asp-action="Create" class="btn btn-warning">Создать</a>
    </p> 
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lesson.LessonNumber)
            </th>
            <th>
                Предмет
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (userRole.Name == "Ученик")
        {
            @foreach (var item in homeWorks)
            {
                Subject subject = await subjectRepository.GetSubjectByIdAsync(item.Lesson.SubjectId);
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lesson.LessonNumber)
                    </td>
                    <td>
                        @subject.Name
                    </td>
                </tr>
            }        
        }
        @if (userRole.Name == "Учитель")
        {
            @foreach (var item in teacherHomeWorks)
            {
                Subject subject = await subjectRepository.GetSubjectByIdAsync(item.Lesson.SubjectId);
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lesson.LessonNumber)
                    </td>
                    <td>
                        @subject.Name
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Изменить</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-warning">Удалить</a>
                    </td>
                </tr>
            }
        }
        @if (userRole.Name == "admin")
        {
            @foreach (var item in Model)
            {
                Subject subject = await subjectRepository.GetSubjectByIdAsync(item.Lesson.SubjectId);
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Lesson.LessonNumber)
                    </td>
                    <td>
                        @subject.Name
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Изменить</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-warning">Удалить</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
